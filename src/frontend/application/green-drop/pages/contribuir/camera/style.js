import { StyleSheet } from "react-native";
import { colors, shadows } from "@/themes/index";

const getStyles = (theme) => StyleSheet.create({
  container: {
    backgroundColor: colors[theme].pageBackground,
    flex: 1,
  },
  // eslint-disable-next-line react-native/sort-styles
  backButton: {
    backgroundColor: theme=='dark' ? colors.dark.icon : colors.light.icon,
    borderColor: theme=='dark' ? colors.dark.border : colors.light.border,
    borderRadius: 24,
    borderWidth: 1,
    elevation: 4,
    padding: 10,
    shadowColor: shadows[theme].top.shadowColor,
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.2,
    shadowRadius: 3,
  },
  header: {
    left: 16,
    position: 'absolute',
    top: 16,
    zIndex: 10,
  },
  cameraContainer: {
    backgroundColor: theme=='dark' ? colors.dark.cameraContainer : colors.light.cameraContainer,
    borderRadius: 16,
    flex: 1,
    margin: 8,
    overflow: 'hidden',
    position: 'relative',
  },
  instructionText: {
    alignItems: 'center',
    alignSelf: 'center',
    backgroundColor: theme=='dark' ? colors.dark.boxBackground : colors.light.boxBackground,
    borderRadius: 12,
    elevation: 3,
    flexDirection: 'row',
    justifyContent: 'center',
    marginBottom: 8,
    marginTop: 12,
    padding: 12,
    position: 'relative',
    shadowColor: shadows[theme].top.shadowColor,
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.2,
    shadowRadius: 2,
    textAlign: 'center',
    width: '90%',
  },
  infoText: {
    color: theme=='dark' ? colors.dark.text : colors.light.text,
    fontSize: 16,
    fontWeight: '500',
    textAlign: 'center',
  },
  infoIcon: {
    color: theme=='dark' ? colors.dark.icon : colors.light.icon,
    fontSize: 30,
    left: -20,
    position: 'relative',
  },
  buttonContainer: {
    backgroundColor: theme=='dark' ? colors.dark.buttonContainer : colors.light.buttonContainer,
    borderTopColor: theme=='dark' ? colors.dark.borderTop : colors.light.borderTop,
    borderTopWidth: 1,
    flexDirection: 'row',
    justifyContent: 'space-between',
    padding: 16,
  },
  nextButton: {
    alignItems: 'center',
    backgroundColor: theme=='dark' ? colors.dark.button : colors.light.button,
    borderRadius: 12,
    elevation: 3,
    flexDirection: 'row',
    justifyContent: 'center',
    paddingHorizontal: 24,
    paddingVertical: 14,
    shadowColor: shadows.dark.top.shadowColor,
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.2,
    shadowRadius: 3,
  },
  buttonText: {
    color: colors[theme].buttonText,
    fontSize: 16,
    fontWeight: 'bold',
    marginRight: 8,
  },
  disabledButton: {
    backgroundColor: theme=='dark' ? colors.dark.disabledButton : colors.light.disabledButton,
  },
  cancelButton: {
    alignItems: 'center',
    backgroundColor: theme=='dark' ? colors.dark.cancelButton : colors.light.cancelButton,
    borderRadius: 12,
    flexDirection: 'row',
    paddingHorizontal: 24,
    paddingVertical: 14,
  },
  cancelText: {
    color: theme=='dark' ? colors.dark.cancelButtonText : colors.light.cancelButtonText,
    fontSize: 16,
    fontWeight: 'bold',
    marginLeft: 8,
  },
  loading: {
    alignItems: 'center',
    backgroundColor: theme=='dark' ? colors.dark.loading : colors.light.loading,
    flex: 1,
    justifyContent: 'center',
  },
  loadingText: {
    color: theme=='dark' ? colors.dark.loadingText : colors.light.loadingText,
    fontSize: 16,
    marginTop: 16,
  },
  locationInfo: {
    alignItems: 'center',
    backgroundColor: theme=='dark' ? colors.dark.locationContainer : colors.light.locationContainer,
    borderColor: theme=='dark' ? colors.dark.locationBorder : colors.light.locationBorder,
    borderRadius: 12,
    borderWidth: 1,
    bottom: 16,
    elevation: 3,
    flexDirection: 'row',
    justifyContent: 'center',
    left: 16,
    padding: 12,
    position: 'absolute',
    right: 16,
    shadowColor: shadows[theme].top.shadowColor,
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.2,
    shadowRadius: 2,
  },
  locationText: {
    color: theme=='dark' ? colors.dark.locationText : colors.light.locationText,
    fontSize: 14,
    fontWeight: '500',
    marginLeft: 6,
  },
});

export default getStyles;