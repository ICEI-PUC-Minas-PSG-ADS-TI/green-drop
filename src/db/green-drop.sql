CREATE TABLE users (
    id             SERIAL PRIMARY KEY,
    name           VARCHAR(100) NOT NULL UNIQUE,
    password_hash  VARCHAR(255) NOT NULL,
    phone          VARCHAR(20) NOT NULL UNIQUE,
    email          VARCHAR(100) NOT NULL UNIQUE,
    photo_url      VARCHAR(255),
    role           VARCHAR(50) NOT NULL,
    created_at     TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    firebase_uid   VARCHAR(100) NOT NULL unique,
	points         INTEGER DEFAULT 0
);

CREATE TABLE report (
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id        BIGINT,
    description    TEXT,
    photo_url      TEXT,
    status         VARCHAR(50),
    created_at     TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT now(),
    validated_at   TIMESTAMP WITHOUT TIME ZONE,
    latitude       NUMERIC(10,8),
    longitude      NUMERIC(11,8),
    category       VARCHAR(100),
    problem_type   VARCHAR(100),
    relevance      VARCHAR(100),
    CONSTRAINT fk_report_user
        FOREIGN KEY(user_id)
        REFERENCES users(id)
        ON UPDATE CASCADE
        ON DELETE SET NULL
);

CREATE TABLE quest (
  id           BIGSERIAL PRIMARY KEY,
  title        VARCHAR NOT NULL,
  description  TEXT,
  quest_type   VARCHAR,
  start_at     TIMESTAMPTZ,
  end_at       TIMESTAMPTZ,
  created_at   TIMESTAMPTZ NOT NULL
);

CREATE TABLE achievement (
  id          BIGSERIAL PRIMARY KEY,
  title       VARCHAR NOT NULL,
  description TEXT,
  goal_type   VARCHAR NOT NULL,
  goal_count  INTEGER NOT NULL
);

CREATE TABLE achievement_quest (
  achievement_id BIGINT NOT NULL,
  quest_id       BIGINT NOT NULL,
  PRIMARY KEY (achievement_id, quest_id),
  FOREIGN KEY (achievement_id) REFERENCES achievement(id),
  FOREIGN KEY (quest_id)       REFERENCES quest(id)
);

CREATE TABLE achievement_goals (
  id             SERIAL PRIMARY KEY,
  achievement_id BIGINT  NOT NULL,
  title          VARCHAR NOT NULL,
  description    TEXT,
  target         INTEGER NOT NULL,
  FOREIGN KEY (achievement_id) REFERENCES achievement(id)
);

CREATE TABLE user_quest_progress (
  user_id   BIGINT NOT NULL,
  quest_id  BIGINT NOT NULL,
  current   INTEGER NOT NULL DEFAULT 0,
  done      BOOLEAN NOT NULL DEFAULT FALSE,
  PRIMARY KEY (user_id, quest_id),
  FOREIGN KEY (quest_id) REFERENCES quest(id)
);

CREATE TABLE user_achievement_progress (
  user_id       BIGINT NOT NULL,
  goal_id       BIGINT NOT NULL,
  achievement_id BIGINT NOT NULL,
  current       INTEGER NOT NULL DEFAULT 0,
  done          BOOLEAN NOT NULL DEFAULT FALSE,
  PRIMARY KEY (user_id, goal_id),
  FOREIGN KEY (goal_id)        REFERENCES achievement_goals(id),
  FOREIGN KEY (achievement_id) REFERENCES achievement(id)
);

CREATE TABLE user_achievements (
  user_id        BIGINT NOT NULL,
  achievement_id BIGINT NOT NULL,
  unlocked       BOOLEAN NOT NULL DEFAULT FALSE,
  unlocked_at    TIMESTAMPTZ,
  PRIMARY KEY (user_id, achievement_id),
  FOREIGN KEY (achievement_id) REFERENCES achievement(id)
);
